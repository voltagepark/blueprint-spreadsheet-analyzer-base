apiVersion: v1
kind: Secret
metadata:
  name: {{ include "chart.fullname" . }}-minio-credentials
  namespace: {{ .Values.namespace | default .Release.Namespace }}
type: Opaque
data:
  MINIO_ROOT_USER: {{ .Values.minio.rootUser | b64enc | quote }}
  MINIO_ROOT_PASSWORD: {{ .Values.minio.rootPassword | b64enc | quote }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "chart.fullname" . }}-minio-data
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ .Values.minio.persistence.size }}"
  {{- if .Values.minio.persistence.storageClassName }}
  storageClassName: {{ .Values.minio.persistence.storageClassName }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  replicas: {{ .Values.minio.replicas }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: minio
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: minio
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "chart.fullname" . }}-minio-data
      containers:
        - name: minio
          image: {{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}
          args:
            - server
            - /data
            - --console-address
            - ":9001"
          ports:
            - name: api
              containerPort: 9000
            - name: console
              containerPort: 9001
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.fullname" . }}-minio-credentials
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.fullname" . }}-minio-credentials
                  key: MINIO_ROOT_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            requests:
              cpu: "{{ .Values.minio.resources.requests.cpu }}"
              memory: "{{ .Values.minio.resources.requests.memory }}"
            limits:
              cpu: "{{ .Values.minio.resources.limits.cpu }}"
              memory: "{{ .Values.minio.resources.limits.memory }}"
          readinessProbe:
            httpGet: { path: /minio/health/ready, port: 9000 }
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
          livenessProbe:
            httpGet: { path: /minio/health/live, port: 9000 }
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    {{- include "chart.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: minio
  ports:
    - name: api
      port: {{ .Values.minio.service.ports.api }}
      targetPort: 9000
      protocol: TCP
    - name: console
      port: {{ .Values.minio.service.ports.console }}
      targetPort: 9001
      protocol: TCP

